pipeline {
    agent any

    stages {
        stage('Clonar repositorio') {
            steps {
                // Jenkins ya clona el repositorio automáticamente en el workspace
                echo 'Repositorio clonado en el workspace.'
            }
        }

        stage('Construir y levantar contenedores') {
            steps {
                dir("${env.WORKSPACE}") {
                    sh 'docker-compose down || true'
                    sh 'docker-compose build'
                    sh 'docker-compose up -d'
                }
            }
        }

        stage('Esperar inicio de servicios') {
            steps {
                echo 'Esperando 15 segundos para que los servicios se inicien...'
                sh 'sleep 15'
            }
        }

        stage('Probar Endpoints') {
            steps {
                echo 'Probando la aplicación en el puerto 3000'
                sh 'curl -f http://localhost:3000/ || exit 1'

                echo 'Probando la aplicación en el puerto 4000'
                sh 'curl -f http://localhost:4000/ || exit 1'
            }
        }

        stage('Apagar contenedores') {
            steps {
                dir("${env.WORKSPACE}") {
                    sh 'docker-compose down'
                }
            }
        }
    }
}
